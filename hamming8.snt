array6<bool> s1, s2, s3, s4, s5, s6, s7, s8;

distance = 0;
distance += (s1[0] != s2[0]).if(1, 0);
distance += (s1[1] != s2[1]).if(1, 0);
distance += (s1[2] != s2[2]).if(1, 0);
distance += (s1[3] != s2[3]).if(1, 0);
distance += (s1[4] != s2[4]).if(1, 0);
distance += (s1[5] != s2[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s3[0]).if(1, 0);
distance += (s1[1] != s3[1]).if(1, 0);
distance += (s1[2] != s3[2]).if(1, 0);
distance += (s1[3] != s3[3]).if(1, 0);
distance += (s1[4] != s3[4]).if(1, 0);
distance += (s1[5] != s3[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s4[0]).if(1, 0);
distance += (s1[1] != s4[1]).if(1, 0);
distance += (s1[2] != s4[2]).if(1, 0);
distance += (s1[3] != s4[3]).if(1, 0);
distance += (s1[4] != s4[4]).if(1, 0);
distance += (s1[5] != s4[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s5[0]).if(1, 0);
distance += (s1[1] != s5[1]).if(1, 0);
distance += (s1[2] != s5[2]).if(1, 0);
distance += (s1[3] != s5[3]).if(1, 0);
distance += (s1[4] != s5[4]).if(1, 0);
distance += (s1[5] != s5[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s6[0]).if(1, 0);
distance += (s1[1] != s6[1]).if(1, 0);
distance += (s1[2] != s6[2]).if(1, 0);
distance += (s1[3] != s6[3]).if(1, 0);
distance += (s1[4] != s6[4]).if(1, 0);
distance += (s1[5] != s6[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s7[0]).if(1, 0);
distance += (s1[1] != s7[1]).if(1, 0);
distance += (s1[2] != s7[2]).if(1, 0);
distance += (s1[3] != s7[3]).if(1, 0);
distance += (s1[4] != s7[4]).if(1, 0);
distance += (s1[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s1[0] != s8[0]).if(1, 0);
distance += (s1[1] != s8[1]).if(1, 0);
distance += (s1[2] != s8[2]).if(1, 0);
distance += (s1[3] != s8[3]).if(1, 0);
distance += (s1[4] != s8[4]).if(1, 0);
distance += (s1[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# ---------

distance = 0;
distance += (s2[0] != s3[0]).if(1, 0);
distance += (s2[1] != s3[1]).if(1, 0);
distance += (s2[2] != s3[2]).if(1, 0);
distance += (s2[3] != s3[3]).if(1, 0);
distance += (s2[4] != s3[4]).if(1, 0);
distance += (s2[5] != s3[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s2[0] != s4[0]).if(1, 0);
distance += (s2[1] != s4[1]).if(1, 0);
distance += (s2[2] != s4[2]).if(1, 0);
distance += (s2[3] != s4[3]).if(1, 0);
distance += (s2[4] != s4[4]).if(1, 0);
distance += (s2[5] != s4[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s2[0] != s5[0]).if(1, 0);
distance += (s2[1] != s5[1]).if(1, 0);
distance += (s2[2] != s5[2]).if(1, 0);
distance += (s2[3] != s5[3]).if(1, 0);
distance += (s2[4] != s5[4]).if(1, 0);
distance += (s2[5] != s5[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s2[0] != s6[0]).if(1, 0);
distance += (s2[1] != s6[1]).if(1, 0);
distance += (s2[2] != s6[2]).if(1, 0);
distance += (s2[3] != s6[3]).if(1, 0);
distance += (s2[4] != s6[4]).if(1, 0);
distance += (s2[5] != s6[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s2[0] != s7[0]).if(1, 0);
distance += (s2[1] != s7[1]).if(1, 0);
distance += (s2[2] != s7[2]).if(1, 0);
distance += (s2[3] != s7[3]).if(1, 0);
distance += (s2[4] != s7[4]).if(1, 0);
distance += (s2[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s2[0] != s8[0]).if(1, 0);
distance += (s2[1] != s8[1]).if(1, 0);
distance += (s2[2] != s8[2]).if(1, 0);
distance += (s2[3] != s8[3]).if(1, 0);
distance += (s2[4] != s8[4]).if(1, 0);
distance += (s2[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# --------------

distance = 0;
distance += (s3[0] != s4[0]).if(1, 0);
distance += (s3[1] != s4[1]).if(1, 0);
distance += (s3[2] != s4[2]).if(1, 0);
distance += (s3[3] != s4[3]).if(1, 0);
distance += (s3[4] != s4[4]).if(1, 0);
distance += (s3[5] != s4[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s3[0] != s5[0]).if(1, 0);
distance += (s3[1] != s5[1]).if(1, 0);
distance += (s3[2] != s5[2]).if(1, 0);
distance += (s3[3] != s5[3]).if(1, 0);
distance += (s3[4] != s5[4]).if(1, 0);
distance += (s3[5] != s5[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s3[0] != s6[0]).if(1, 0);
distance += (s3[1] != s6[1]).if(1, 0);
distance += (s3[2] != s6[2]).if(1, 0);
distance += (s3[3] != s6[3]).if(1, 0);
distance += (s3[4] != s6[4]).if(1, 0);
distance += (s3[5] != s6[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s3[0] != s7[0]).if(1, 0);
distance += (s3[1] != s7[1]).if(1, 0);
distance += (s3[2] != s7[2]).if(1, 0);
distance += (s3[3] != s7[3]).if(1, 0);
distance += (s3[4] != s7[4]).if(1, 0);
distance += (s3[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s3[0] != s8[0]).if(1, 0);
distance += (s3[1] != s8[1]).if(1, 0);
distance += (s3[2] != s8[2]).if(1, 0);
distance += (s3[3] != s8[3]).if(1, 0);
distance += (s3[4] != s8[4]).if(1, 0);
distance += (s3[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# --------------

distance = 0;
distance += (s4[0] != s5[0]).if(1, 0);
distance += (s4[1] != s5[1]).if(1, 0);
distance += (s4[2] != s5[2]).if(1, 0);
distance += (s4[3] != s5[3]).if(1, 0);
distance += (s4[4] != s5[4]).if(1, 0);
distance += (s4[5] != s5[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s4[0] != s6[0]).if(1, 0);
distance += (s4[1] != s6[1]).if(1, 0);
distance += (s4[2] != s6[2]).if(1, 0);
distance += (s4[3] != s6[3]).if(1, 0);
distance += (s4[4] != s6[4]).if(1, 0);
distance += (s4[5] != s6[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s4[0] != s7[0]).if(1, 0);
distance += (s4[1] != s7[1]).if(1, 0);
distance += (s4[2] != s7[2]).if(1, 0);
distance += (s4[3] != s7[3]).if(1, 0);
distance += (s4[4] != s7[4]).if(1, 0);
distance += (s4[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s4[0] != s8[0]).if(1, 0);
distance += (s4[1] != s8[1]).if(1, 0);
distance += (s4[2] != s8[2]).if(1, 0);
distance += (s4[3] != s8[3]).if(1, 0);
distance += (s4[4] != s8[4]).if(1, 0);
distance += (s4[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# --------------

distance = 0;
distance += (s5[0] != s6[0]).if(1, 0);
distance += (s5[1] != s6[1]).if(1, 0);
distance += (s5[2] != s6[2]).if(1, 0);
distance += (s5[3] != s6[3]).if(1, 0);
distance += (s5[4] != s6[4]).if(1, 0);
distance += (s5[5] != s6[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s5[0] != s7[0]).if(1, 0);
distance += (s5[1] != s7[1]).if(1, 0);
distance += (s5[2] != s7[2]).if(1, 0);
distance += (s5[3] != s7[3]).if(1, 0);
distance += (s5[4] != s7[4]).if(1, 0);
distance += (s5[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s5[0] != s8[0]).if(1, 0);
distance += (s5[1] != s8[1]).if(1, 0);
distance += (s5[2] != s8[2]).if(1, 0);
distance += (s5[3] != s8[3]).if(1, 0);
distance += (s5[4] != s8[4]).if(1, 0);
distance += (s5[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# -------------

distance = 0;
distance += (s6[0] != s7[0]).if(1, 0);
distance += (s6[1] != s7[1]).if(1, 0);
distance += (s6[2] != s7[2]).if(1, 0);
distance += (s6[3] != s7[3]).if(1, 0);
distance += (s6[4] != s7[4]).if(1, 0);
distance += (s6[5] != s7[5]).if(1, 0);
invariant distance >= 3;

distance = 0;
distance += (s6[0] != s8[0]).if(1, 0);
distance += (s6[1] != s8[1]).if(1, 0);
distance += (s6[2] != s8[2]).if(1, 0);
distance += (s6[3] != s8[3]).if(1, 0);
distance += (s6[4] != s8[4]).if(1, 0);
distance += (s6[5] != s8[5]).if(1, 0);
invariant distance >= 3;

# -------------

distance = 0;
distance += (s7[0] != s8[0]).if(1, 0);
distance += (s7[1] != s8[1]).if(1, 0);
distance += (s7[2] != s8[2]).if(1, 0);
distance += (s7[3] != s8[3]).if(1, 0);
distance += (s7[4] != s8[4]).if(1, 0);
distance += (s7[5] != s8[5]).if(1, 0);
invariant distance >= 3;

vary s1, s2, s3, s4, s5, s6, s7, s8;
