function hamming_distance (a, b) {
  distance = 0;

  distance += if(a[0] != b[0], 1, 0);
  distance += if(a[1] != b[1], 1, 0);
  distance += if(a[2] != b[2], 1, 0);
  distance += if(a[3] != b[3], 1, 0);
  distance += if(a[4] != b[4], 1, 0);
  distance += if(a[5] != b[5], 1, 0);

  return distance;
};

array9<array6<bool>> strings;
vary strings;

invariant hamming_distance(strings[0], strings[1]) >= 3;
invariant hamming_distance(strings[0], strings[2]) >= 3;
invariant hamming_distance(strings[0], strings[3]) >= 3;
invariant hamming_distance(strings[0], strings[4]) >= 3;
invariant hamming_distance(strings[0], strings[5]) >= 3;
invariant hamming_distance(strings[0], strings[6]) >= 3;
invariant hamming_distance(strings[0], strings[7]) >= 3;
invariant hamming_distance(strings[0], strings[8]) >= 3;

invariant hamming_distance(strings[1], strings[2]) >= 3;
invariant hamming_distance(strings[1], strings[3]) >= 3;
invariant hamming_distance(strings[1], strings[4]) >= 3;
invariant hamming_distance(strings[1], strings[5]) >= 3;
invariant hamming_distance(strings[1], strings[6]) >= 3;
invariant hamming_distance(strings[1], strings[7]) >= 3;
invariant hamming_distance(strings[1], strings[8]) >= 3;

invariant hamming_distance(strings[2], strings[3]) >= 3;
invariant hamming_distance(strings[2], strings[4]) >= 3;
invariant hamming_distance(strings[2], strings[5]) >= 3;
invariant hamming_distance(strings[2], strings[6]) >= 3;
invariant hamming_distance(strings[2], strings[7]) >= 3;
invariant hamming_distance(strings[2], strings[8]) >= 3;

invariant hamming_distance(strings[3], strings[4]) >= 3;
invariant hamming_distance(strings[3], strings[5]) >= 3;
invariant hamming_distance(strings[3], strings[6]) >= 3;
invariant hamming_distance(strings[3], strings[7]) >= 3;
invariant hamming_distance(strings[3], strings[8]) >= 3;

invariant hamming_distance(strings[4], strings[5]) >= 3;
invariant hamming_distance(strings[4], strings[6]) >= 3;
invariant hamming_distance(strings[4], strings[7]) >= 3;
invariant hamming_distance(strings[4], strings[8]) >= 3;

invariant hamming_distance(strings[5], strings[6]) >= 3;
invariant hamming_distance(strings[5], strings[7]) >= 3;
invariant hamming_distance(strings[5], strings[8]) >= 3;

invariant hamming_distance(strings[6], strings[7]) >= 3;
invariant hamming_distance(strings[6], strings[8]) >= 3;

invariant hamming_distance(strings[7], strings[8]) >= 3;
